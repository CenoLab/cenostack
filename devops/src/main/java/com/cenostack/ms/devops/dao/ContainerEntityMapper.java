package com.cenostack.ms.devops.dao;

import com.cenostack.ms.devops.dto.base.Page;
import com.cenostack.ms.devops.dto.developer.Developer;
import com.cenostack.ms.devops.entity.ContainerEntity;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import java.util.List;

public interface ContainerEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    @Delete({
        "delete from devops_container",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    @Insert({
        "insert into devops_container (developer_id, ",
        "container_host, container_user, ",
        "container_pwd, container_port, ",
        "last_modify_time, create_time, ",
        "container_name, container_desc)",
        "values (#{developerId,jdbcType=INTEGER}, ",
        "#{containerHost,jdbcType=VARCHAR}, #{containerUser,jdbcType=VARCHAR}, ",
        "#{containerPwd,jdbcType=VARCHAR}, #{containerPort,jdbcType=INTEGER}, ",
        "#{lastModifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{containerName,jdbcType=VARCHAR}, #{containerDesc,jdbcType=VARCHAR})"
    })
    int insert(ContainerEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    int insertSelective(ContainerEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, developer_id, container_host, container_user, container_pwd, container_port, ",
        "last_modify_time, create_time, container_name, container_desc",
        "from devops_container",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.ContainerEntityMapper.BaseResultMap")
    ContainerEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(ContainerEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_container
     *
     * @mbg.generated
     */
    @Update({
        "update devops_container",
        "set developer_id = #{developerId,jdbcType=INTEGER},",
          "container_host = #{containerHost,jdbcType=VARCHAR},",
          "container_user = #{containerUser,jdbcType=VARCHAR},",
          "container_pwd = #{containerPwd,jdbcType=VARCHAR},",
          "container_port = #{containerPort,jdbcType=INTEGER},",
          "last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "container_name = #{containerName,jdbcType=VARCHAR},",
          "container_desc = #{containerDesc,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(ContainerEntity record);

    @Select({
            "select",
            "id, developer_id, container_host, container_user, container_pwd, container_port, ",
            "last_modify_time, create_time, container_name, container_desc",
            "from devops_container",
            "where container_name = #{name,jdbcType=VARCHAR}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.ContainerEntityMapper.BaseResultMap")
    ContainerEntity selectByContainerName(String name);

    @Select({
            "select",
            "id, developer_id, container_host, container_user, container_pwd, container_port, ",
            "last_modify_time, create_time, container_name, container_desc",
            "from devops_container",
            "where developer_id = #{developer.id,jdbcType=INTEGER}",
            "limit #{page.page,jdbcType=INTEGER},#{page.num,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.ContainerEntityMapper.BaseResultMap")
    List<ContainerEntity> selectContainers(Developer developer,Page page);

    @Select({
            "select",
            "count(id)",
            "from devops_container"
    })
    int count();

    @Select({
            "select",
            "count(id)",
            "from devops_container",
            "where developer_id = #{developer,jdbcType=INTEGER}"
    })
    String countMy(Integer developer);
}