package com.cenostack.ms.devops.dao;

import com.cenostack.ms.devops.dto.developer.BaseAuthority;
import com.cenostack.ms.devops.dto.developer.Developer;
import com.cenostack.ms.devops.dto.developer.UserLogin;
import com.cenostack.ms.devops.entity.DeveloperEntity;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface DeveloperEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    @Delete({
        "delete from devops_developer",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    @Insert({
        "insert into devops_developer (id, developer_username, ",
        "developer_password, developer_email, ",
        "developer_phone, developer_token, ",
        "last_modify_time, create_time)",
        "values (#{id,jdbcType=INTEGER}, #{developerUsername,jdbcType=VARCHAR}, ",
        "#{developerPassword,jdbcType=VARCHAR}, #{developerEmail,jdbcType=VARCHAR}, ",
        "#{developerPhone,jdbcType=VARCHAR}, #{developerToken,jdbcType=VARCHAR}, ",
        "#{lastModifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(DeveloperEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    int insertSelective(DeveloperEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, developer_username, developer_password, developer_email, developer_phone, ",
        "developer_token, last_modify_time, create_time",
        "from devops_developer",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeveloperEntityMapper.BaseResultMap")
    DeveloperEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(DeveloperEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_developer
     *
     * @mbg.generated
     */
    @Update({
        "update devops_developer",
        "set developer_username = #{developerUsername,jdbcType=VARCHAR},",
          "developer_password = #{developerPassword,jdbcType=VARCHAR},",
          "developer_email = #{developerEmail,jdbcType=VARCHAR},",
          "developer_phone = #{developerPhone,jdbcType=VARCHAR},",
          "developer_token = #{developerToken,jdbcType=VARCHAR},",
          "last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(DeveloperEntity record);

    @Select({
            "select",
            "id, developer_username, developer_password, developer_email, developer_phone, ",
            "developer_token, last_modify_time, create_time",
            "from devops_developer",
            "where developer_username = #{userName,jdbcType=VARCHAR}",
            "and",
            "developer_password = #{password,jdbcType=VARCHAR}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeveloperEntityMapper.BaseResultMap")
    DeveloperEntity selectByUserLogin(UserLogin userLogin);

    @Select({
            "select",
            "id, developer_username, developer_password, developer_email, developer_phone, ",
            "developer_token, last_modify_time, create_time",
            "from devops_developer",
            "where id = #{id,jdbcType=INTEGER}",
            "and",
            "developer_username = #{developerUsername,jdbcType=VARCHAR}",
            "and",
            "developer_token = #{developerToken,jdbcType=VARCHAR}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeveloperEntityMapper.BaseResultMap")
    DeveloperEntity selectByDeveloper(Developer developer);


    @Select({
            "select",
            "id, developer_username, developer_password, developer_email, developer_phone, ",
            "developer_token, last_modify_time, create_time",
            "from devops_developer",
            "where id = #{uid,jdbcType=VARCHAR}",
            "and",
            "developer_username = #{username,jdbcType=VARCHAR}",
            "and",
            "developer_token = #{token,jdbcType=VARCHAR}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeveloperEntityMapper.BaseResultMap")
    DeveloperEntity selectByBaseAuthority(BaseAuthority baseAuthority);
}