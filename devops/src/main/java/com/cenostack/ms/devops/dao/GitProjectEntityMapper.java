package com.cenostack.ms.devops.dao;

import com.cenostack.ms.devops.entity.GitProjectEntity;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

public interface GitProjectEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    @Delete({
        "delete from devops_git_project",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    @Insert({
        "insert into devops_git_project (id, developer_id, ",
        "project_name, git_path, ",
        "git_user, last_modify_time, ",
        "create_time)",
        "values (#{id,jdbcType=INTEGER}, #{developerId,jdbcType=INTEGER}, ",
        "#{projectName,jdbcType=VARCHAR}, #{gitPath,jdbcType=VARCHAR}, ",
        "#{gitUser,jdbcType=INTEGER}, #{lastModifyTime,jdbcType=TIMESTAMP}, ",
        "#{createTime,jdbcType=TIMESTAMP})"
    })
    int insert(GitProjectEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    int insertSelective(GitProjectEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, developer_id, project_name, git_path, git_user, last_modify_time, create_time",
        "from devops_git_project",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.GitProjectEntityMapper.BaseResultMap")
    GitProjectEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(GitProjectEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_git_project
     *
     * @mbg.generated
     */
    @Update({
        "update devops_git_project",
        "set developer_id = #{developerId,jdbcType=INTEGER},",
          "project_name = #{projectName,jdbcType=VARCHAR},",
          "git_path = #{gitPath,jdbcType=VARCHAR},",
          "git_user = #{gitUser,jdbcType=INTEGER},",
          "last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(GitProjectEntity record);

    @Select({
            "select",
            "count(id)",
            "from devops_git_project"
    })
    int count();

    @Select({
            "select",
            "id, developer_id, project_name, git_path, git_user, last_modify_time, create_time",
            "from devops_git_project",
            "where developer_id = #{id,jdbcType=INTEGER}",
            "and git_path = #{gitCodePath,jdbcType=VARCHAR} "
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.GitProjectEntityMapper.BaseResultMap")
    GitProjectEntity selectByCodePathAndDeveloperId(Integer id, String gitCodePath);

    @Select({
            "select",
            "id, developer_id, project_name, git_path, git_user, last_modify_time, create_time",
            "from devops_git_project",
            "where developer_id = #{id,jdbcType=INTEGER}",
            "and project_name = #{projectName,jdbcType=VARCHAR} "
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.GitProjectEntityMapper.BaseResultMap")
    GitProjectEntity selectByProjName(String projectName, Integer id);
}