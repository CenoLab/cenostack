package com.cenostack.ms.devops.dao;

import com.cenostack.ms.devops.dto.base.Page;
import com.cenostack.ms.devops.entity.DeployEntity;
import com.cenostack.ms.devops.dto.developer.Developer;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.Update;

import java.util.List;

public interface DeployEntityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    @Delete({
        "delete from devops_java_deploy",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    @Insert({
        "insert into devops_java_deploy (id, developer_id, ",
        "deploy_container, java_build, ",
        "deploy_path, deploy_with_script, ",
        "last_modify_time, create_time, ",
        "version, env)",
        "values (#{id,jdbcType=INTEGER}, #{developerId,jdbcType=INTEGER}, ",
        "#{deployContainer,jdbcType=INTEGER}, #{javaBuild,jdbcType=INTEGER}, ",
        "#{deployPath,jdbcType=VARCHAR}, #{deployWithScript,jdbcType=INTEGER}, ",
        "#{lastModifyTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, ",
        "#{version,jdbcType=VARCHAR}, #{env,jdbcType=VARCHAR})"
    })
    int insert(DeployEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    int insertSelective(DeployEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    @Select({
        "select",
        "id, developer_id, deploy_container, java_build, deploy_path, deploy_with_script, ",
        "last_modify_time, create_time, version, env",
        "from devops_java_deploy",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeployEntityMapper.BaseResultMap")
    DeployEntity selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(DeployEntity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table devops_java_deploy
     *
     * @mbg.generated
     */
    @Update({
        "update devops_java_deploy",
        "set developer_id = #{developerId,jdbcType=INTEGER},",
          "deploy_container = #{deployContainer,jdbcType=INTEGER},",
          "java_build = #{javaBuild,jdbcType=INTEGER},",
          "deploy_path = #{deployPath,jdbcType=VARCHAR},",
          "deploy_with_script = #{deployWithScript,jdbcType=INTEGER},",
          "last_modify_time = #{lastModifyTime,jdbcType=TIMESTAMP},",
          "create_time = #{createTime,jdbcType=TIMESTAMP},",
          "version = #{version,jdbcType=VARCHAR},",
          "env = #{env,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(DeployEntity record);

    @Select({
            "select",
            "id, developer_id, deploy_container, java_build, deploy_path, deploy_with_script, ",
            "last_modify_time, create_time, version, env",
            "from devops_java_deploy",
            "where developer_id = #{developer.id,jdbcType=INTEGER}",
            "limit #{page.page,jdbcType=INTEGER},#{page.num,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeployEntityMapper.BaseResultMap")
    List<DeployEntity> listDeploys(Developer developer,Page page);


    @Select({
            "select",
            "id, developer_id, deploy_container, java_build, deploy_path, deploy_with_script, ",
            "last_modify_time, create_time, version, env",
            "from devops_java_deploy",
            "where deploy_container = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeployEntityMapper.BaseResultMap")
    List<DeployEntity> selectByContainerId(Integer id);

    @Select({
            "select",
            "id, developer_id, deploy_container, java_build, deploy_path, deploy_with_script, ",
            "last_modify_time, create_time, version, env",
            "from devops_java_deploy",
            "where java_build = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeployEntityMapper.BaseResultMap")
    DeployEntity selectByBuild(Integer id);

    @Select({
            "select",
            "id, developer_id, deploy_container, java_build, deploy_path, deploy_with_script, ",
            "last_modify_time, create_time, version, env",
            "from devops_java_deploy",
            "where deploy_container = #{id,jdbcType=INTEGER}"
    })
    @ResultMap("com.jd.dkh.ms.devops.dao.DeployEntityMapper.BaseResultMap")
    List<DeployEntity> listContainerDeploys(Integer id);

    @Select({
            "select",
            "count(id)",
            "from devops_java_deploy"
    })
    int count();

    @Select({
            "select",
            "count(id)",
            "from devops_java_deploy",
            "where developer_id = #{id,jdbcType=INTEGER}"
    })
    String countMy(Integer id);
}